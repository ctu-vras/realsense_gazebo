<?xml version="1.0"?>

<!--
SPDX-License-Identifier: Apache-2.0
SPDX-FileCopyrightText: 2017 Intel Corporation
SPDX-FileCopyrightText: Czech Technical University in Prague

This is the URDF model for the Intel RealSense 415 camera, in its
aluminum peripherial evaluation case.

Original file from https://github.com/IntelRealSense/realsense-ros edited by Martin Pecka:
- rewrote a few links/joints to use macros from utils.xacro
- all links have non-zero inertia 
-->

<robot name="gzrs_sensor_d415" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Includes -->
  <xacro:include filename="$(find realsense2_description)/urdf/_materials.urdf.xacro" />
  <xacro:include filename="$(find realsense_gazebo)/urdf/_usb_plug.urdf.xacro" />
  <xacro:include filename="$(find realsense_gazebo)/urdf/utils.xacro" />

  <xacro:macro name="gzrs_sensor_d415" params="parent *origin name:=camera use_nominal_extrinsics:=false add_plug:=false use_mesh:=true">
    <xacro:property name="M_PI" value="3.1415926535897931" />

    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <xacro:property name="d415_cam_depth_to_infra1_offset" value="0.0"/>
    <xacro:property name="d415_cam_depth_to_infra2_offset" value="-0.055"/>
    <xacro:property name="d415_cam_depth_to_color_offset" value="0.015"/>

    <!-- The following values model the aluminum peripherial case for the
  	d415 camera, with the camera joint represented by the actual
  	peripherial camera tripod mount -->
    <xacro:property name="d415_cam_width" value="0.099"/>
    <xacro:property name="d415_cam_height" value="0.023"/>
    <xacro:property name="d415_cam_depth" value="0.02005"/>
    <xacro:property name="d415_cam_mount_from_center_offset" value="0.00987"/>

    <!-- The following offset is relative the the physical d415 camera peripherial
  	camera tripod mount -->
    <xacro:property name="d415_cam_depth_px" value="${d415_cam_mount_from_center_offset}"/>
    <xacro:property name="d415_cam_depth_py" value="0.020"/>
    <xacro:property name="d415_cam_depth_pz" value="${d415_cam_height/2}"/>

    <!-- camera body, with origin at bottom screw mount -->
    <joint name="${name}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${name}_bottom_screw_frame" />
    </joint>
    <xacro:gzrs_empty_link name="${name}_bottom_screw_frame"/>

    <xacro:gzrs_fixed_joint name="${name}_link_joint" parent="${name}_bottom_screw_frame" child="${name}_link" lump="1">
      <origin xyz="0 ${d415_cam_depth_py} ${d415_cam_depth_pz}" rpy="0 0 0"/>
    </xacro:gzrs_fixed_joint>

    <link name="${name}_link">
      <visual>
        <xacro:if value="${use_mesh}">
          <origin xyz="${d415_cam_mount_from_center_offset} ${-d415_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
          <geometry>
            <mesh filename="package://realsense2_description/meshes/d415.stl" />
          </geometry>
          <material name="aluminum"/>
        </xacro:if>
        <xacro:unless value="${use_mesh}">
          <origin xyz="0 ${-d415_cam_depth_py} 0" rpy="0 0 0"/>
          <geometry>
            <box size="${d415_cam_depth} ${d415_cam_width} ${d415_cam_height}"/>
          </geometry>
        </xacro:unless>     
      </visual>
      <collision>
        <origin xyz="0 ${-d415_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d415_cam_depth} ${d415_cam_width} ${d415_cam_height}"/>
        </geometry>
      </collision>
      <xacro:gzrs_box_inertial width="${d415_cam_width}" height="${d415_cam_height}" depth="${d415_cam_depth}" mass="0.072">
        <origin xyz="0 ${-d415_cam_depth_py} 0" rpy="0 0 0"/>
      </xacro:gzrs_box_inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <xacro:gzrs_fixed_joint name="${name}_depth_joint" parent="${name}_link" child="${name}_depth_frame" lump="0">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:gzrs_fixed_joint>
      <xacro:gzrs_empty_link name="${name}_depth_frame"/>
      <xacro:gzrs_optical_frame camera_frame="${name}_depth" />

      <!-- camera left IR joints and links -->
      <xacro:gzrs_fixed_joint name="${name}_infra1_joint" parent="${name}_link" child="${name}_infra1_frame" lump="0">
        <origin xyz="0 ${d415_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
      </xacro:gzrs_fixed_joint>
      <xacro:gzrs_empty_link name="${name}_infra1_frame"/>
      <xacro:gzrs_optical_frame camera_frame="${name}_infra1" />

      <!-- camera right IR joints and links -->
      <xacro:gzrs_fixed_joint name="${name}_infra2_joint" parent="${name}_link" child="${name}_infra2_frame" lump="0">
        <origin xyz="0 ${d415_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
      </xacro:gzrs_fixed_joint>
      <xacro:gzrs_empty_link name="${name}_infra2_frame"/>
      <xacro:gzrs_optical_frame camera_frame="${name}_infra2" />

      <!-- camera color joints and links -->
      <xacro:gzrs_fixed_joint name="${name}_color_joint" parent="${name}_link" child="${name}_color_frame" lump="0">
        <origin xyz="0 ${d415_cam_depth_to_color_offset} 0" rpy="0 0 0" />
      </xacro:gzrs_fixed_joint>
      <xacro:gzrs_empty_link name="${name}_color_frame"/>
      <xacro:gzrs_optical_frame camera_frame="${name}_color" />
    </xacro:if>

    <xacro:if value="${add_plug}">
      <xacro:gzrs_usb_plug parent="${name}_link" name="${name}_usb_plug">
        <origin xyz="${d415_cam_mount_from_center_offset - 0.01587} ${-d415_cam_depth_py - 0.0358} 0" rpy="0 0 0"/>
      </xacro:gzrs_usb_plug>
    </xacro:if>
  </xacro:macro>
</robot>
